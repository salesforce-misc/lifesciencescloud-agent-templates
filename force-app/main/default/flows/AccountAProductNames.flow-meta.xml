<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>65.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>AccountNameOutput</name>
        <label>AccountNameOutput</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>CurrentAccount</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>{!Account_Names.Name} (Account ID: {!Account_Names.Id})&apos;&lt;br&gt;&apos;</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AllAccountName</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>CurrentAccount</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Account_Names</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>InjectAccountName</name>
        <elementSubtype>AddPromptInstructions</elementSubtype>
        <label>InjectAccountName</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>$Output.Prompt</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>Account Names in Org:
{!AllAccountName}
</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Product_Names</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>InjectProductName</name>
        <elementSubtype>AddPromptInstructions</elementSubtype>
        <label>InjectProductName</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>$Output.Prompt</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>Product Names:
{!AllProductName}
</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Product_Name_Output</name>
        <label>Product Name Output</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>CurrentProduct</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>{!Product_Names.Name} (Product ID: {!Product_Names.Id}) (Parent Product: {!Product_Names.ParentProduct.Name} ) &apos;&lt;br&gt;&apos;</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AllProductName</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>CurrentProduct</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Product_Names</targetReference>
        </connector>
    </assignments>
    <environments>Default</environments>
    <interviewLabel>AccountAProductNames {!$Flow.CurrentDateTime}</interviewLabel>
    <label>AccountAProductNames</label>
    <loops>
        <description>Get Account Names</description>
        <name>Account_Names</name>
        <label>Account Names</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>Get_Accounts</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AccountNameOutput</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>InjectAccountName</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Product_Names</name>
        <label>Product Names</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>Get_Products</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Product_Name_Output</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>InjectProductName</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>PromptFlow</processType>
    <recordLookups>
        <description>Get All Accounts in the Org</description>
        <name>Get_Accounts</name>
        <label>Get Accounts</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Products</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get all Products</description>
        <name>Get_Products</name>
        <label>Get Products</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Account_Names</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>LifeSciMarketableProduct</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Accounts</targetReference>
        </connector>
        <triggerType>Capability</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>AllAccountName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>AllProductName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Current Account in Loop</description>
        <name>CurrentAccount</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>CurrentProduct</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>DummyInput</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
